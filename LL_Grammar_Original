------------- HLAVNE TELO -------------
1. '<PROGRAM> → <SEQ> EOF',
------------- SEKVENCIA PRIKAZOV -------------
2. '<SEQ> → ε',
3. '<SEQ> → <DEF_VARIABLE> ID <DEF_TYPE_VAR> <ASSIGN_VARIABLE> EOL <SEQ>',  # DEFINICIA PREMENNEJ
4. '<SEQ> → ID <ASSIGN_OR_CALL_FUNC> EOL <SEQ>',                            # PRIRADENIE / VOLANIE FUNKCIE
5. '<SEQ> → if <IF_EXPRESSION> { <SEQ> } <ELSE_STATEMENT> EOL <SEQ>',       # IF
6. '<SEQ> → while <EXPRESSION> { <SEQ> } EOL <SEQ>',                        # WHILE
7. '<SEQ> → func ID ( <PARAMS> ) <DEF_FUNC_2> EOL <SEQ>',                   # DEFINICIA FUNKCIE
------------- DEFINICIA PREMENNEJ -------------
8. '<DEF_VARIABLE> → let',
9. '<DEF_VARIABLE> → var',
10. '<DEF_TYPE_VAR> → ε',
11. '<DEF_TYPE_VAR> → : <TYPE>',
12. '<ASSIGN_VARIABLE> → = <EXPRESSION>',
13. '<ASSIGN_VARIABLE> → ε',
------------- DEFINICIA FUNKCIE -------------
14. '<DEF_FUNC_2> → -> <TYPE> { <SEQ> <RETURN_FUNC> }',
15. '<PARAMS> → <PARAMS_N>',
16. '<PARAMS> → <PARAMS_NAME> ID : <TYPE> <PARAMS_N>',
17. '<PARAMS_NAME> → _',
18. '<PARAMS_NAME> → ID',
19. '<PARAMS_N> → )',
20. '<PARAMS_N> → , <PARAMS>',
21. '<RETURN_FUNC> → return <EXPRESSION>',
22. '<RETURN_FUNC> → ε',        
------------- PRIRADENIE / VOLANIE FUNKCIE -------------
23. '<ASSIGN_OR_CALL_FUNC> → = <ASSIGN_OR_CALL_FUNC_N>',                     # BUD BUDE ID = EXPRESSION || ID = VOLANIE NON-VOID FUNKCIE
24. '<ASSIGN_OR_CALL_FUNC> → ( <PARAMS_IN> ',                                # ALEBO ID ( PARAMS_IN )
25. '<ASSIGN_OR_CALL_FUNC_N> → <EXPRESSION>',
26. '<ASSIGN_OR_CALL_FUNC_N> → <CALL_FUNC>',                                 # VOLANIE NE-VOID FUNKCIE 
27. '<CALL_FUNC> → ID ( <PARAMS_IN> EOL',  
28. '<PARAMS_IN> → <PARAMS_IN_N>',
29. '<PARAMS_IN> → ID <PARAMS_IN_NAME> <PARAMS_IN_N>',
30. '<PARAMS_IN> → STRING_LITERAL',
31. '<PARAMS_IN> → INT_LITERAL',
32. '<PARAMS_IN> → DOUBLE_LITERAL',
33. '<PARAMS_IN_NAME> → : <TERM>',
34. '<PARAMS_IN_N> → )',
35. '<PARAMS_IN_N> → , <PARAMS_IN>',
------------- IF-ELSE PODMIENKA -------------
36. '<ELSE_STATEMENT> → else { <SEQ> }',
37. '<IF_EXPRESSION> → <EXPRESSION>',
38. '<IF_EXPRESSION> → let ID',
------------- TYP -------------
39. '<TYPE> → Int <QUEST_MARK>',
40. '<TYPE> → Double <QUEST_MARK>',
41. '<TYPE> → String <QUEST_MARK>',
42. '<QUEST_MARK> → ?',    
43. '<QUEST_MARK> → ε',
------------- TERM -------------
44. '<TERM> → ID',
45. '<TERM> → INT_LITERAL',
46. '<TERM> → DOUBLE_LITERAL',
47. '<TERM> → STRING_LITERAL',

# o 6 pravidiel menej



<EXPRESSION> -> <EXPRESSION> * <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> / <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> + <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> - <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> == <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> != <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> < <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> > <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> <= <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> >= <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> ?? <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> !
<EXPRESSION> -> ( <EXPRESSION> )        
<EXPRESSION> -> <TERM>
