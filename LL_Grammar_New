1. <PROG> -> <SEQUENCE> EOF
2. <SEQUENCE> -> ε
3. <SEQUENCE> -> <VAR_DEF> IDENTIFIER <VAR_TYPE_DEF> <ASSIGN_VAR> <SEQUENCE>
4. <SEQUENCE> -> IDENTIFIER <ASSIGN_OR_FUNCTION> <SEQUENCE>
5. <SEQUENCE> -> IF <IF_EXP> LEFT_BRACKET <SEQUENCE> RIGHT_BRACKET <ELSE_STAT> <SEQUENCE> 
6. <SEQUENCE> -> WHILE <EXPRESSION> LEFT_BRACKET <SEQUENCE> RIGHT_BRACKET <SEQUENCE>
7. <SEQUENCE> -> FUNC IDENTIFIER LEFT_PAR <FIRST_PARAM_DEF> <DEF_FUNCTION> <SEQUENCE>
8. <VAR_DEF> -> LET
9. <VAR_DEF> -> VAR
10. <VAR_TYPE_DEF> -> ε
11. <VAR_TYPE_DEF> -> COLON <TYPE>
12. <ASSIGN_VAR> -> ASSIGNMENT <EXP_OR_CALL>
13. <ASSIGN_VAR> -> ε
14. <DEF_FUNCTION> -> ARROW <TYPE> LEFT_BRACKET <SEQUENCE> <RETURN_FUNCTION> RIGHT_BRACKET
15. <FIRST_PARAM_DEF> -> <PARAMS_DEF> <PARAMS_DEF_N>
16. <FIRST_PARAM_DEF> -> RIGHT_PAR
17. <PARAMS_DEF> -> <PARAMS_NAME_DEF> IDENTIFIER COLON <TYPE>
18. <PARAMS_NAME_DEF> -> UNDERSCORE
19. <PARAMS_NAME_DEF> -> IDENTIFIER
20. <PARAMS_DEF_N> -> RIGHT_PAR
21. <PARAMS_DEF_N> -> COMMA <PARAMS_DEF> <PARAMS_DEF_N>
22. <RETURN_FUNCTION> -> RETURN <EXPRESSION>
23. <RETURN_FUNCTION> -> ε     
24. <ASSIGN_OR_FUNCTION> -> ASSIGNMENT <EXP_OR_CALL>
25. <ASSIGN_OR_FUNCTION> -> LEFT_PAR <FIRST_PARAM>
26. <EXP_OR_CALL> -> <EXPRESSION>
27. <EXP_OR_CALL> -> <CALL_FUNCTION>
28. <CALL_FUNCTION> -> IDENTIFIER LEFT_PAR <FIRST_PARAM> 
29. <FIRST_PARAM> -> RIGHT_PAR
30. <FIRST_PARAM> -> <PARAMS> <PARAMS_N>
31. <PARAMS_N> -> RIGHT_PAR
32. <PARAMS_N> -> COMMA <PARAMS> <PARAMS_N>
33. <PARAMS> -> INT_LIT
34. <PARAMS> -> DOUBLE_LIT
35. <PARAMS> -> STRING_LIT
36. <PARAMS> -> IDENTIFIER <PARAMS_NAME>
37. <PARAMS_NAME> -> COLON <ID_OR_LIT>
38. <PARAMS_NAME> -> ε
39. <ELSE_STAT> -> ELSE LEFT_BRACKET <SEQUENCE> RIGHT_BRACKET
40. <IF_EXP> -> <EXPRESSION>
41. <IF_EXP> -> LET IDENTIFIER
42. <TYPE> -> INT <Q_MARK>
43. <TYPE> -> DOUBLE <Q_MARK>
44. <TYPE> -> STRING <Q_MARK>
45. <Q_MARK> -> QUESTION_MARK  
46. <Q_MARK> -> ε
47. <ID_OR_LIT> -> IDENTIFIER
48. <ID_OR_LIT> -> INT_LIT
49. <ID_OR_LIT> -> DOUBLE_LIT
50. <ID_OR_LIT> -> STRING_LIT



<EXPRESSION> -> <EXPRESSION> * <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> / <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> + <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> - <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> == <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> != <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> < <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> > <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> <= <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> >= <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> ?? <EXPRESSION>
<EXPRESSION> -> <EXPRESSION> !
<EXPRESSION> -> LEFT_PAR <EXPRESSION> RIGHT_PAR        
<EXPRESSION> -> IDENTIFIER
<EXPRESSION> -> STRING_LIT
<EXPRESSION> -> INT_LIT
<EXPRESSION> -> DOUBLE_LIT